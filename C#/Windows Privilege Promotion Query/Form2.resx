<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GgQErAhOnPg/Z2DtonwndkMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GgQErAhOnPg/Z2DtonwndkMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAp16FGKdehISnXoUYAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAqF6ENKhehQQAAAAAAAAAAAAAAACoXoQWqF6EQKdfhZSoXoTOp1+ERAAA
        AAAAAAAAAAAAAAAAAAAAAAAAp16EEqdehPyoX4RcAAAAAAAAAACnX4RMp1+F6qhehYCnXoSAp16EcKVh
        hwAAAAAAAAAAAAAAAAAAAAAAAAAAAKdehRanXoX8p16EdKhehXaoXoUap1+EzqhehIoAAAAAAAAAAKde
        hdqnXoQeAAAAAAAAAAAAAAAAAAAAAAAAAACnXoUSp16F/KdfhCqnX4WKp1+FuKhehNinXoRiAAAAAKdf
        hBCnX4T0p1+EMAAAAAAAAAAAAAAAAAAAAAAAAAAAp16EYKhfhP+nXoRUqF+Erqhfhb6nXoRUqF6FdKde
        hGynX4XIp1+F0KdfhAQAAAAAAAAAAAAAAAAAAAAAAAAAAKhehAanXoRiqF+EKKhehXanXoQkAAAAAH9/
        fwCoXoRMp16EiqdfhBYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqF+FBqhf
        hAKoXoQGp1+EAgAAAACoXoUEqF6EBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAp16EAKhe
        hLqoX4R+p1+EqKdehIoAAAAAqF6EgKhehLynX4MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhf
        hT6oXoX0qF6EaKdehPaoXoWoqF6FJKdehZinXoTEqF6EQKhehRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACoXoS2p16EnqdehKCoXoSsp1+EWqhehHynXoWQp1+EqKhfhVqnX4Xup16FJAAAAAAAAAAAAAAAAAAA
        AACnX4RiqF+E+qhfhFqoXoTmqF6ENqdfhH6nX4Sgp16EyKdfhKSnX4Qop1+E8qdfhUoAAAAAAAAAAAAA
        AAAAAAAAp16FJKdehHB/f38AqV6EBKdehGioX4X6p16EXKdehGKnX4RuqF6FkqdehJqnX4UIAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACoXoUCqF6FLqhehgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/+8AAP/PAADvHwAA7m8AAOjvAADpzwAA/98AAP//AAD//wAA//8AAPSfAAD0nwAA4ZcAAOsX
        AAD+5wAA//8AAA==
</value>
  </data>
</root>